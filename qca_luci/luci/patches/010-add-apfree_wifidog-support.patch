diff -uNr a/applications/luci-apfree_wifidog/luasrc/controller/apfree_wifidog.lua b/applications/luci-apfree_wifidog/luasrc/controller/apfree_wifidog.lua
--- a/applications/luci-apfree_wifidog/luasrc/controller/apfree_wifidog.lua	1970-01-01 08:00:00.000000000 +0800
+++ b/applications/luci-apfree_wifidog/luasrc/controller/apfree_wifidog.lua	2017-08-11 14:48:17.000000000 +0800
@@ -0,0 +1,77 @@
+-- Copyright (C) 2016 zhangzf@kunteng.org
+-- Licensed to the public under the GNU General Public License v3.
+
+module("luci.controller.apfree_wifidog", package.seeall)
+
+function index()
+	entry({"admin", "services", "apfreeWifiDog"}, cbi("apfree_wifidog"), _("WifiDog"), 40).index = true
+	entry({"admin", "services", "apfreeWifiDog", "getClientList"}, call("getClientList"))
+	entry({"admin", "services", "apfreeWifiDog", "KickOffUser"}, call("KickOffUser"))
+end
+
+function KickOffUser()
+	local RespDate = {}
+	local RespCode = 0
+	mac=luci.http.formvalue("mac")
+	luci.util.exec("wdctl reset %q " % mac)
+	local flag = luci.util.exec("wdctl status | grep %q| wc -l" % mac)
+	RespDate["mac"] = mac
+	RespDate["status"] = flag
+	luci.http.prepare_content("application/json")
+	luci.http.write_json(RespDate)
+end
+
+function getClientList()
+	local RespDate = {}
+	local RespCode = 0
+	local HostName, IPAddr, MacAddr, Download, Upload, LoginTime
+	
+	local WdctlCMD = "wdctl status | grep -e '^ ' | sed -r 's/^ +//' 2>/dev/null"
+	
+	local UpTime = luci.util.exec("wdctl status | grep Uptime | cut -d ' ' -f 2-6")
+	if UpTime == "" then
+		RespCode = 1
+	else		
+		local function initDate()
+			HostName = "unknow"
+			IPAddr = "" 
+			MacAddr = "" 
+			Download = 0 
+			Upload = 0
+			LoginTime = "0"
+		end
+		
+		local ClientList = {}
+		for _, Line in pairs(luci.util.execl(WdctlCMD)) do	
+			if Line:match('^(IP:)') == "IP:" then
+				IPAddr, MacAddr = Line:match('^IP: (%S+) MAC: (%S+)')
+			elseif Line:match('^(First Login:)') == "First Login:" then
+				LoginTime = Line:match('^First Login: (%d+)')
+			elseif Line:match('^(Name:)') == "Name:" then
+				HostName = Line:match('^Name: (%S+)')		
+			elseif Line:match('^(Downloaded:)') == "Downloaded:" then
+				Download = Line:match('^Downloaded: (%d+)')		
+			elseif Line:match('^(Uploaded:)') == "Uploaded:" then
+				Upload = Line:match('^Uploaded: (%d+)')
+				
+				table.insert(ClientList, {
+						['hostname'] = HostName,
+						['ipaddr'] = IPAddr,
+						['macaddr'] = MacAddr,
+						['download'] = Download,
+						['upload'] = Upload,
+						['logintime'] = os.difftime(os.time(), tonumber(LoginTime) or 0),
+					})
+					
+				initDate()
+			end
+		end
+		
+		RespDate["clients"] = ClientList
+		RespDate["uptime"]	= UpTime
+	end
+	
+	RespDate["code"] = RespCode
+	luci.http.prepare_content("application/json")
+	luci.http.write_json(RespDate)
+end
diff -uNr a/applications/luci-apfree_wifidog/luasrc/model/cbi/apfree_wifidog.lua b/applications/luci-apfree_wifidog/luasrc/model/cbi/apfree_wifidog.lua
--- a/applications/luci-apfree_wifidog/luasrc/model/cbi/apfree_wifidog.lua	1970-01-01 08:00:00.000000000 +0800
+++ b/applications/luci-apfree_wifidog/luasrc/model/cbi/apfree_wifidog.lua	2017-08-11 14:48:28.000000000 +0800
@@ -0,0 +1,101 @@
+-- Copyright (C) 2016 zhangzf@kunteng.org
+-- Licensed to the public under the GNU General Public License v3.
+
+local sys = require "luci.sys"
+local opkg = require "luci.model.ipkg"
+
+local packageName = "wifidog"
+local m, s, o
+
+local function get_status()
+	if luci.sys.call("pidof %s >/dev/null" %{packageName}) == 0 then
+		local UpTime = luci.util.exec("wdctl status | grep Uptime | cut -d ' ' -f 2-6")
+		local StatusUrl = "http://" .. luci.http.getenv('SERVER_NAME') .. ":2060/wifidog/status"	
+		
+		return translate("<span id=\"wifidog-status\" style=\"color:green;margin-left:50px\">已运行 " .. UpTime .."</span>") -- .."<a target=\"_blank\" href=" .. StatusUrl .. "> 查看更多</a>")
+	else
+		return translate("<span id=\"wifidog-status\" style=\"color:red;margin-left:50px\">WifiDog 程序未启动</span>")
+	end
+end
+
+if opkg.status(packageName)[packageName] then
+	return Map(packageName, translate("ApFree_WifiDog"), translate('<b style="color:red">Wifidog is not installed..</b>'))
+end
+
+m = Map("wifidog", translate("ApFree_WifiDog"))
+
+s = m:section(TypedSection, "wifidog", translate("运行状态"), get_status())
+s.anonymous = true
+
+s = m:section(TypedSection, "wifidog", translate("程序配置"))
+s.anonymous = true
+s.addremove = false
+
+s:tab("general", translate("基本设置"))
+s:tab("policy", translate("访问控制"))
+s:tab("advanced", translate("高级设置"))
+
+-- 基本设置
+Enable = s:taboption("general", Flag, "enable", translate("启用"),translate("打开或关闭认证"))
+Enable.rmempty = false
+Enable.default = "1"
+
+GatewayID = s:taboption("general",Value, "gateway_id", translate("设备 ID"), translate("默认为br-lan网口MAC地址"))
+GatewayID.placeholder = luci.util.exec("ifconfig br-lan| grep HWaddr | awk -F \" \" '{print $5}' | awk '$1~//{print;exit}' | sed 's/://g'")
+
+s:taboption("general", Value, "auth_server_hostname", translate("认证服务器"), translate("认证服务器地址, 可填写域名或IP"))
+
+ServerPort = s:taboption("general", Value, "auth_server_port", translate("服务器端口"), translate("认证服务器HTTP服务端口"))
+ServerPort.datatype = "port"
+
+s:taboption("general", Value, "auth_server_path", translate("服务器路径"), translate("服务端WEB目录，必须以'/'结尾，例如'/wifidog/'"))
+
+-- 高级设置
+JSFilter = s:taboption("advanced",Flag, "js_filter", translate("本地跳转"),translate("是否开启本地html跳转"))
+JSFilter.rmempty = false
+JSFilter.default = "1"
+
+PoolMode = s:taboption("advanced",Flag, "pool_mode", translate("线程池模式"),translate("是否开启线程池"))
+PoolMode.rmempty = false
+JSFilter.default = "1"
+
+ThreadNumber = s:taboption("advanced", Value, "thread_number", translate("线程数"), translate("设置线程池中的最大线程数"))
+ThreadNumber.datatype = "uinteger"
+ThreadNumber:depends("pool_mode", "1")
+ThreadNumber.default = "5"
+
+QueueSize = s:taboption("advanced", Value, "queue_size", translate("队列大小"), translate("线程池的任务队列长度"))
+QueueSizedatatype = "uinteger"
+QueueSize:depends("pool_mode", "1")
+QueueSize.default = "20"
+
+GatewayInterface = s:taboption("advanced", Value, "gateway_interface", translate("内网接口"), translate("指定开启portal认证的网络接口，默认'br-lan'"))
+GatewayInterface.default = "br-lan"
+for _, e in ipairs(sys.net.devices()) do
+	if e ~= "lo" then GatewayInterface:value(e) end
+end
+
+CheckInterval = s:taboption("advanced", Value, "check_interval", translate("检查间隔"), translate("接入客户端在线检测间隔，默认60秒"))
+CheckInterval.datatype = "uinteger"
+CheckInterval.default = "60"
+
+ClientTimeout = s:taboption("advanced", Value, "client_timeout", translate("超时时间"), translate("客户离线后在此时间段内重新连接不需要再次认证，默认300秒"))
+ClientTimeout.datatype = "uinteger"
+ClientTimeout.default = "300"
+
+MaxConnections = s:taboption("advanced", Value, "httpd_max_conn", translate("最大接入用户数"), translate("最大可同时在线的用户数"))
+MaxConnections.datatype = "uinteger"
+MaxConnections.default = "200"
+
+-- 访问控制
+s:taboption("policy", Value, "trusted_domains", translate("域名白名单"), translate("不用通过认证既可访问的网址，不含\"http://\", 多个URL请用 ,号隔开"))
+
+s:taboption("policy", Value, "trusted_iplist", translate("IP白名单"), translate("不用通过认证既可访问的ip, 多个地址请用 ,号隔开"))
+
+s:taboption("policy", Value, "trusted_maclist", translate("MAC白名单"), translate("非强制认证的用户MAC，多个MAC请用 ,号隔开;如：“11:22:33:44:55:66,aa:bb:cc:dd:ff:00”"))
+
+s:taboption("policy", Value, "untrusted_maclist", translate("MAC黑名单"), translate("禁止访问网络的MAC，多个MAC请用 ,号隔开;如：“11:22:33:44:55:66,aa:bb:cc:dd:ff:00”"))
+
+m:section(SimpleSection).template = "apfree_wifidog/client_list"
+
+return m
diff -uNr a/applications/luci-apfree_wifidog/luasrc/view/apfree_wifidog/client_list.htm b/applications/luci-apfree_wifidog/luasrc/view/apfree_wifidog/client_list.htm
--- a/applications/luci-apfree_wifidog/luasrc/view/apfree_wifidog/client_list.htm	1970-01-01 08:00:00.000000000 +0800
+++ b/applications/luci-apfree_wifidog/luasrc/view/apfree_wifidog/client_list.htm	2017-08-11 13:39:33.000000000 +0800
@@ -0,0 +1,103 @@
+<script type="text/javascript">//<![CDATA[
+	function online_delete(event)
+	{
+		var row = event.parentNode.parentNode;
+		cells = row.getElementsByTagName("td")
+		ip = cells[1].innerHTML;
+		mac = cells[2].innerHTML.toLowerCase();
+		
+		(new XHR()).post('<%=luci.dispatcher.build_url("admin", "services", "apfreeWifiDog", "KickOffUser")%>', {mac},
+			function(x,rp)
+			{
+				if(x.status == 200)
+				{
+					row.remove();
+				}
+			}
+		);
+	}
+	
+	XHR.poll(20, '<%=luci.dispatcher.build_url("admin", "services", "apfreeWifiDog", "getClientList")%>', null,
+		function(x, rp)
+		{
+			var sa = document.getElementById('wifidog-status');
+			var tb = document.getElementById('client-list');
+			if (rp && tb && sa)
+			{
+				if(rp.code == "1")
+				{
+					sa.style.color = "red";
+					sa.innerHTML = "<%:WifiDog 程序未启动%>";
+				}
+				
+				if(rp.uptime)
+				{
+					sa.style.color = "green";
+					sa.innerHTML = '已运行 ' + rp.uptime;				
+				}
+				
+				/* clear all rows */
+				while( tb.rows.length > 1 )
+					tb.deleteRow(1);
+				
+				var st = rp.clients ? rp.clients : "";
+				for( var i = 0; i < st.length; i++ )
+				{
+					var timestr = String.format('%t', st[i].logintime);
+
+					var tr = tb.insertRow(-1);
+						tr.className = 'cbi-section-table-row cbi-rowstyle-' + ((i % 2) + 1);
+
+					tr.insertCell(-1).innerHTML = st[i].hostname ? st[i].hostname : '?';
+					tr.insertCell(-1).innerHTML = st[i].ipaddr.toLowerCase();
+					tr.insertCell(-1).innerHTML = st[i].macaddr.toLowerCase();
+					tr.insertCell(-1).innerHTML = bandwidth_Label(st[i].upload);
+					tr.insertCell(-1).innerHTML = bandwidth_Label(st[i].download);
+					tr.insertCell(-1).innerHTML = timestr;
+					tr.insertCell(-1).innerHTML = '<input type="button" value="<%:Delete%>" class="cbi-button cbi-button-apply" onclick="online_delete(this)"/>';;
+				}
+
+				if( tb.rows.length == 1 )
+				{
+					var tr = tb.insertRow(-1);
+						tr.className = 'cbi-section-table-row';
+
+					var td = tr.insertCell(-1);
+						td.colSpan = 6;
+						td.innerHTML = '<em><br /><%:没有客户端连接.%></em>';
+				}
+			}
+		}
+	);
+	
+	function bandwidth_Label(bytes) {
+		var uby = '<%:KB%>';
+		var kby = (bytes / 1024);
+
+		if (kby >= 1024)
+		{
+			uby = '<%:MB%>';
+			kby = (kby / 1024);
+		}
+		
+		return String.format("%f %s",kby.toFixed(2), uby);
+	}
+//]]></script>
+
+<fieldset class="cbi-section">
+	<legend><%:已认证客户端%></legend>
+	<table class="cbi-section-table" id="client-list">
+		<tr class="cbi-section-table-titles">
+			<th class="cbi-section-table-cell"><%:主机名%></th>
+			<th class="cbi-section-table-cell"><%:IP 地址%></th>
+			<th class="cbi-section-table-cell"><%:MAC 地址%></th>
+			<th class="cbi-section-table-cell"><%:上传%></th>
+			<th class="cbi-section-table-cell"><%:下载%></th>
+			<th class="cbi-section-table-cell"><%:在线时长%></th>
+			<th class="cbi-section-table-cell"></th>			
+		</tr>
+		<tr class="cbi-section-table-row">
+			<td colspan="6"><em><br /><%:Collecting data...%></em></td>
+		</tr>
+	</table>
+</fieldset>
diff -uNr a/applications/luci-apfree_wifidog/Makefile b/applications/luci-apfree_wifidog/Makefile
--- a/applications/luci-apfree_wifidog/Makefile	1970-01-01 08:00:00.000000000 +0800
+++ b/applications/luci-apfree_wifidog/Makefile	2017-08-11 14:45:43.000000000 +0800
@@ -0,0 +1,4 @@
+PO = apfree_wifidog
+
+include ../../build/config.mk
+include ../../build/module.mk
diff -uNr a/applications/luci-apfree_wifidog/root/etc/uci-defaults/90_luci_wifidog b/applications/luci-apfree_wifidog/root/etc/uci-defaults/90_luci_wifidog
--- a/applications/luci-apfree_wifidog/root/etc/uci-defaults/90_luci_wifidog	1970-01-01 08:00:00.000000000 +0800
+++ b/applications/luci-apfree_wifidog/root/etc/uci-defaults/90_luci_wifidog	2017-08-11 13:39:33.000000000 +0800
@@ -0,0 +1,11 @@
+#!/bin/sh
+
+uci -q batch <<-EOF >/dev/null
+	delete ucitrack.@wifidog[-1]
+	add ucitrack wifidog
+	set ucitrack.@wifidog[-1].init=wifidog
+	commit ucitrack
+EOF
+
+rm -f /tmp/luci-indexcache
+exit 0
