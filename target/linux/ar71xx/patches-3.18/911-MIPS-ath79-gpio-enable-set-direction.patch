Index: linux-3.18.45/arch/mips/ath79/common.h
===================================================================
--- linux-3.18.45.orig/arch/mips/ath79/common.h	2017-08-10 09:42:12.433491473 +0800
+++ linux-3.18.45/arch/mips/ath79/common.h	2017-08-10 09:56:09.465541229 +0800
@@ -29,5 +29,6 @@
 void ath79_gpio_function_setup(u32 set, u32 clear);
 void ath79_gpio_output_select(unsigned gpio, u8 val);
 void ath79_gpio_init(void);
+int ath79_gpio_direction_select(unsigned gpio, bool oe);
 
 #endif /* __ATH79_COMMON_H */
Index: linux-3.18.45/arch/mips/ath79/gpio.c
===================================================================
--- linux-3.18.45.orig/arch/mips/ath79/gpio.c	2017-08-10 09:42:13.037491509 +0800
+++ linux-3.18.45/arch/mips/ath79/gpio.c	2017-08-10 09:58:09.553548367 +0800
@@ -130,6 +130,30 @@
 	return 0;
 }
 
+int ath79_gpio_direction_select(unsigned gpio, bool oe)
+{
+	void __iomem *base = ath79_gpio_base;
+	unsigned long flags;
+	bool ieq_1 = (soc_is_ar934x() ||
+			soc_is_qca953x());
+
+	if (gpio >= ath79_gpio_count)
+		return -1;
+
+	spin_lock_irqsave(&ath79_gpio_lock, flags);
+
+	if ((ieq_1 && oe) || (!ieq_1 && !oe))
+		__raw_writel(__raw_readl(base + AR71XX_GPIO_REG_OE) & ~(1 << gpio),
+				base + AR71XX_GPIO_REG_OE);
+	else
+		__raw_writel(__raw_readl(base + AR71XX_GPIO_REG_OE) | (1 << gpio),
+				base + AR71XX_GPIO_REG_OE);
+
+	spin_unlock_irqrestore(&ath79_gpio_lock, flags);
+
+	return 0;
+}
+
 static struct gpio_chip ath79_gpio_chip = {
 	.label			= "ath79",
 	.get			= ath79_gpio_get_value,
